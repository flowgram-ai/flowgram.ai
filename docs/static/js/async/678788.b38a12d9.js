"use strict";(self.webpackChunk_flowgram_ai_docs=self.webpackChunk_flowgram_ai_docs||[]).push([["678788"],{367866:function(e,n,r){r.r(n),r.d(n,{default:function(){return s}});var i=r(110239),t=r(444827);function o(e){let n=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code"},(0,t.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"自定义-service",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#自定义-service",children:"#"}),"自定义 Service"]}),"\n",(0,i.jsx)(n.p,{children:"业务中需要抽象出单例服务便于插件化管理"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",meta:"pure",children:"/**\n *  inversify: https://github.com/inversify/InversifyJS\n */\nimport { injectable, inject } from 'inversify'\nimport { useMemo } from 'react';\nimport { FlowDocument, type FixedLayoutProps } from '@flowgram.ai/fixed-layout-editor'\n\n@injectable()\nclass MyService {\n  // 依赖注入单例模块\n  @inject(FlowDocument) flowDocument: FlowDocument\n  // ...\n}\n\nfunction BaseNode() {\n  const mySerivce = useService<MyService>(MyService)\n}\n\nexport function useEditorProps(\n): FixedLayoutProps {\n  return useMemo<FixedLayoutProps>(\n    () => ({\n      // ....other props\n      onBind: ({ bind }) => {\n        bind(MyService).toSelf().inSingletonScope()\n      },\n      materials: {\n        renderDefaultNode: BaseNode\n      }\n    }),\n    [],\n  );\n}\n\n"})})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(o,e)})):o(e)}let s=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["zh%2Fguide%2Fadvanced%2Fcustom-service.mdx"]={toc:[],title:"自定义 Service",frontmatter:{}}}}]);