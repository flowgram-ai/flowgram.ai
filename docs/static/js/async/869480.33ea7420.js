"use strict";(self.webpackChunk_flowgram_ai_docs=self.webpackChunk_flowgram_ai_docs||[]).push([["869480"],{992221:function(e,n,d){d.r(n),d.d(n,{default:function(){return o}});var s=d(110239),t=d(444827);function r(e){let n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",ul:"ul",li:"li",h3:"h3",pre:"pre",div:"div"},(0,t.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"flownodeentityworkflownodeentity",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#flownodeentityworkflownodeentity",children:"#"}),"FlowNodeEntity/WorkflowNodeEntity"]}),"\n",(0,s.jsxs)(n.p,{children:["节点实体，",(0,s.jsx)(n.code,{children:"WorkflowNodeEntity"})," 为节点别名用于自由布局节点, 节点实体采用 ",(0,s.jsx)(n.a,{href:"/flowgram.ai/guide/concepts/ECS.html",children:"ECS"})," 架构, 为 ",(0,s.jsx)(n.code,{children:"Entity"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://flowgram-ai.github.io/flowgram.ai/auto-docs/document/classes/FlowNodeEntity-1.html",rel:"noopener noreferrer",target:"_blank",children:"> API Detail"})}),"\n",(0,s.jsxs)(n.h2,{id:"properties",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#properties",children:"#"}),"Properties"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["id: ",(0,s.jsx)(n.code,{children:"string"})," 节点 id"]}),"\n",(0,s.jsxs)(n.li,{children:["flowNodeType: ",(0,s.jsx)(n.code,{children:"string"})," | ",(0,s.jsx)(n.code,{children:"number"})," 节点类型"]}),"\n",(0,s.jsxs)(n.li,{children:["version ",(0,s.jsx)(n.code,{children:"number"})," 节点版本，可以用于判断节点状态是否更新"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"accessors",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#accessors",children:"#"}),"Accessors"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["document: ",(0,s.jsx)(n.code,{children:"FlowDocument | WorkflowDocument"})," 文档链接"]}),"\n",(0,s.jsxs)(n.li,{children:["bounds: ",(0,s.jsx)(n.code,{children:"Rectangle"})," 获取节点的 x，y，width，height, 等价于 ",(0,s.jsx)(n.code,{children:"transform.bounds"})]}),"\n",(0,s.jsxs)(n.li,{children:["blocks: ",(0,s.jsx)(n.code,{children:"FlowNodeEntity[]"})," 获取子节点, 包含折叠的子节点, 等价于 ",(0,s.jsx)(n.code,{children:"collapsedChildren"})]}),"\n",(0,s.jsxs)(n.li,{children:["collapsedChildren: ",(0,s.jsx)(n.code,{children:"FlowNodeEntity[]"})," 获取子节点, 包含折叠的子节点"]}),"\n",(0,s.jsxs)(n.li,{children:["allCollapsedChildren: ",(0,s.jsx)(n.code,{children:"FlowNodeEntity[]"})," 获取所有子节点，包括所有折叠的子节点"]}),"\n",(0,s.jsxs)(n.li,{children:["children: ",(0,s.jsx)(n.code,{children:"FlowNodeEntity[]"})," 获取子节点, 不包含折叠的子节点"]}),"\n",(0,s.jsxs)(n.li,{children:["pre: ",(0,s.jsx)(n.code,{children:"FlowNodeEntity | undefined"})," 获取上一个节点"]}),"\n",(0,s.jsxs)(n.li,{children:["next: ",(0,s.jsx)(n.code,{children:"FlowNodeEntity | undefined"})," 获取下一个节点"]}),"\n",(0,s.jsxs)(n.li,{children:["parent: ",(0,s.jsx)(n.code,{children:"FlowNodeEntity | undefined"})," 获取父节点"]}),"\n",(0,s.jsxs)(n.li,{children:["originParent: ",(0,s.jsx)(n.code,{children:"FlowNodeEntity | undefined"})," 获取原始父节点, 这个用于固定布局分支的第一个节点(orderIcon) 找到整个虚拟分支"]}),"\n",(0,s.jsxs)(n.li,{children:["allChildren: ",(0,s.jsx)(n.code,{children:"FlowNodeEntity[]"})," 获取所有子节点, 不包含折叠的子节点"]}),"\n",(0,s.jsxs)(n.li,{children:["transform: ",(0,s.jsx)(n.a,{href:"https://flowgram-ai.github.io/flowgram.ai/auto-docs/document/classes/FlowNodeTransformData.html",rel:"noopener noreferrer",target:"_blank",children:"FlowNodeTransformData"})," 获取节点的 transform 矩阵数据"]}),"\n",(0,s.jsxs)(n.li,{children:["renderData: ",(0,s.jsx)(n.a,{href:"https://flowgram-ai.github.io/flowgram.ai/auto-docs/document/classes/FlowNodeRenderData.html",rel:"noopener noreferrer",target:"_blank",children:"FlowNodeRenderData"})," 获取节点的渲染数据, 包含渲染状态等"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"methods",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#methods",children:"#"}),"Methods"]}),"\n",(0,s.jsxs)(n.h3,{id:"getextinfo",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#getextinfo",children:"#"}),"getExtInfo"]}),"\n",(0,s.jsxs)(n.p,{children:["获取节点的扩展信息, 可以通过 ",(0,s.jsx)(n.code,{children:"updateExtInfo"})," 更新扩展信息"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{meta:"",children:"node.getExtInfo<{ test: string }>()\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"updateextinfo",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#updateextinfo",children:"#"}),"updateExtInfo"]}),"\n",(0,s.jsxs)(n.p,{children:["更新扩展数据, 更新不会记录到 ",(0,s.jsx)(n.code,{children:"redo/undo"}),", 如果需要记录，请实现 ",(0,s.jsx)(n.a,{href:"/flowgram.ai/guide/advanced/history.html",children:"history"})," 服务"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{meta:"",children:"node.updateExtInfo<{ test: string }>({\n  test: 'test'\n})\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"getnoderegistry",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#getnoderegistry",children:"#"}),"getNodeRegistry"]}),"\n",(0,s.jsxs)(n.p,{children:["获取节点注册器, 等价于 ",(0,s.jsx)(n.code,{children:"ctx.document.getNodeRegistry(node.flowNodeType)"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:"pure",children:"const nodeRegistry = node.getNodeRegistry<FlowNodeRegistry>()\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"getdata",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#getdata",children:"#"}),"getData"]}),"\n",(0,s.jsxs)(n.p,{children:["等价于 ",(0,s.jsx)(n.a,{href:"/flowgram.ai/guide/concepts/ECS.html",children:"ECS"})," 架构 里获取 Entity 的 Component"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:"pure",children:"node.getData(FlowNodeTransformData) // transform 矩阵数据, 包含节点的 x，y，width，height 等信息\nnode.getData(FlowNodeRenderData) // 节点的渲染数据, 包含渲染状态等数据\nnode.getData(WorkflowNodeLinesData) // 自由布局的线条数据\n\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"adddata",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#adddata",children:"#"}),"addData"]}),"\n",(0,s.jsxs)(n.p,{children:["等价于 ",(0,s.jsx)(n.a,{href:"/flowgram.ai/guide/concepts/ECS.html",children:"ECS"})," 架构 里添加 Entity 的 Component"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:"pure",children:"\n// 自定义 EntityData\nclass CustomEntityData extends EntityData<{ key0: string }> {\n  static type = 'CustomEntityData';\n  getDefaultData() {\n    return {\n      key0: 'test'\n    }\n  }\n}\n\n// 添加 Enitty Component\nnode.addData(CustomEntityData)\n\n\n// 更新 Entity Component 数据\nnode.getData(CustomEntityData).update({ key0: 'new value' })\n\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"getservice",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#getservice",children:"#"}),"getService"]}),"\n",(0,s.jsxs)(n.p,{children:["节点访问 ",(0,s.jsx)(n.a,{href:"/flowgram.ai/guide/concepts/IOC.html",children:"IOC"})," 服务"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:"pure",children:"node.getService(SelectionService)\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"dispose",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#dispose",children:"#"}),"dispose"]}),"\n",(0,s.jsx)(n.p,{children:"节点从画布中销毁"}),"\n",(0,s.jsxs)(n.h3,{id:"ondispose",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#ondispose",children:"#"}),"onDispose"]}),"\n",(0,s.jsx)(n.p,{children:"节点销毁事件"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:"pure",children:"useEffect(() => {\n  const toDispose = node.onDispose(() => {\n    console.log('Dispose node')\n  })\n  return () => toDispose.dispose()\n}, [node])\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"tojson",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tojson",children:"#"}),"toJSON"]}),"\n",(0,s.jsx)(n.p,{children:"导出节点数据"}),"\n",(0,s.jsxs)(n.div,{className:"rspress-directive note",children:[(0,s.jsx)(n.div,{className:"rspress-directive-title",children:"节点数据基本结构:"}),(0,s.jsx)(n.div,{className:"rspress-directive-content",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["id: ",(0,s.jsx)(n.code,{children:"string"})," 节点唯一标识, 必须保证唯一"]}),"\n",(0,s.jsxs)(n.li,{children:["meta: ",(0,s.jsx)(n.code,{children:"object"})," 节点的 ui 配置信息，如自由布局的 ",(0,s.jsx)(n.code,{children:"position"})," 信息放这里"]}),"\n",(0,s.jsxs)(n.li,{children:["type: ",(0,s.jsx)(n.code,{children:"string | number"})," 节点类型，会和 ",(0,s.jsx)(n.code,{children:"nodeRegistries"})," 中的 ",(0,s.jsx)(n.code,{children:"type"})," 对应"]}),"\n",(0,s.jsxs)(n.li,{children:["data: ",(0,s.jsx)(n.code,{children:"object"})," 节点表单数据, 业务可自定义"]}),"\n",(0,s.jsxs)(n.li,{children:["blocks: ",(0,s.jsx)(n.code,{children:"array"})," 节点的分支, 采用 ",(0,s.jsx)(n.code,{children:"block"})," 更贴近 ",(0,s.jsx)(n.code,{children:"Gramming"})]}),"\n"]})})]})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(r,e)})):r(e)}let o=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["zh%2Fapi%2Fcore%2Fflow-node-entity.mdx"]={toc:[{id:"properties",text:"Properties",depth:2},{id:"accessors",text:"Accessors",depth:2},{id:"methods",text:"Methods",depth:2},{id:"getextinfo",text:"getExtInfo",depth:3},{id:"updateextinfo",text:"updateExtInfo",depth:3},{id:"getnoderegistry",text:"getNodeRegistry",depth:3},{id:"getdata",text:"getData",depth:3},{id:"adddata",text:"addData",depth:3},{id:"getservice",text:"getService",depth:3},{id:"dispose",text:"dispose",depth:3},{id:"ondispose",text:"onDispose",depth:3},{id:"tojson",text:"toJSON",depth:3}],title:"FlowNodeEntity/WorkflowNodeEntity",frontmatter:{}}}}]);