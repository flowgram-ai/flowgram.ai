"use strict";(self.webpackChunk_flowgram_ai_docs=self.webpackChunk_flowgram_ai_docs||[]).push([["83196"],{451239:function(e,n,t){t.r(n),t.d(n,{default:function(){return a}});var r=t(110239),o=t(444827);function s(e){let n=Object.assign({h2:"h2",a:"a",p:"p",pre:"pre",code:"code"},(0,o.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h2,{id:"historyservice",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#historyservice",children:"#"}),"HistoryService"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://flowgram-ai.github.io/flowgram.ai/auto-docs/fixed-history-plugin/classes/HistoryService.html",rel:"noopener noreferrer",target:"_blank",children:"> API Detail"})}),"\n",(0,r.jsxs)(n.h2,{id:"redoundo",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#redoundo",children:"#"}),"Redo/Undo"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",meta:"pure",children:"import { useEffect, useState } from 'react'\nimport { useClientContext } from '@flowgram.ai/fixed-layout-editor';\n\nexport function Tools() {\n  const { history } = useClientContext();\n  const [canUndo, setCanUndo] = useState(false);\n  const [canRedo, setCanRedo] = useState(false);\n\n  useEffect(() => {\n    const disposable = history.undoRedoService.onChange(() => {\n      setCanUndo(history.canUndo());\n      setCanRedo(history.canRedo());\n    });\n    return () => disposable.dispose();\n  }, [history]);\n\n  return <div>\n    <button onClick={() => history.undo()} disabled={!canUndo}>Undo</button>\n    <button onClick={() => history.redo()} disabled={!canRedo}>Redo</button>\n  </div>\n}\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"渲染历史记录",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#渲染历史记录",children:"#"}),"渲染历史记录"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",meta:"pure",children:"import { useEffect } from 'react'\nimport { useRefresh, useClientContext } from '@flowgram.ai/fixed-layout-editor'\n\nfunction HistoryListRender() {\n  const refresh = useRefresh()\n  const ctx = useClientContext()\n  useEffect(() => {\n    ctx.history.onApply(() => refresh())\n  }, [ctx])\n  return (\n    <div>\n      {ctx.history.historyManager.historyStack.items.map((record) => <HistoryOperations key={record.id} operations={record.operations} />)}\n    </div>\n  )\n}\n"})})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(s,e)})):s(e)}let a=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["zh%2Fapi%2Fservices%2Fhistory-service.mdx"]={toc:[{id:"historyservice",text:"HistoryService",depth:2},{id:"redoundo",text:"Redo/Undo",depth:2},{id:"渲染历史记录",text:"渲染历史记录",depth:2}],title:"",frontmatter:{}}}}]);