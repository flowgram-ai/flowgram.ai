"use strict";(self.webpackChunk_flowgram_ai_docs=self.webpackChunk_flowgram_ai_docs||[]).push([["996139"],{266642:function(e,a,r){r.r(a),r.d(a,{default:function(){return o}});var n=r(110239),t=r(444827);function i(e){let a=Object.assign({h1:"h1",a:"a",h2:"h2",pre:"pre",code:"code",h3:"h3",p:"p"},(0,t.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a.h1,{id:"变量的使用",children:[(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#变量的使用",children:"#"}),"变量的使用"]}),"\n",(0,n.jsxs)(a.h2,{id:"开启变量引擎",children:[(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#开启变量引擎",children:"#"}),"开启变量引擎"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-tsx",meta:'pure title="use-editor-props.ts"',children:"\n// EditorProps\n{\n  variableEngine: {\n    /**\n     * 需要开启变量引擎才能使用\n     */\n    enable: true\n  }\n}\n"})}),"\n",(0,n.jsxs)(a.h2,{id:"节点输出变量",children:[(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#节点输出变量",children:"#"}),"节点输出变量"]}),"\n",(0,n.jsxs)(a.h3,{id:"通过-flownodevariabledata-设置输出变量",children:[(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#通过-flownodevariabledata-设置输出变量",children:"#"}),"通过 FlowNodeVariableData 设置输出变量"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-tsx",meta:'pure title="variable-plugin.tsx"',children:"import {\n  FlowNodeVariableData,\n  ASTFactory,\n} from '@flowgram.ai/fixed-layout-editor';\n\n// ....\n\nflowDocument.onNodeCreate(({ node }) => {\n  const variableData = node.getData<FlowNodeVariableData>(FlowNodeVariableData);\n\n  // ....\n\n  // 1. Clear VariableData if No value\n  variableData.clearVar()\n\n  // 2. Set a String Variable as output\n  variableData.setVar(\n    ASTFactory.createVariableDeclaration({\n      meta: {\n        title: `Your Output Variable Title`,\n      },\n      key: `your_variable_global_unique_key_${node.id}`,\n      type: ASTFactory.createString(),\n    })\n  )\n\n  // 3. Set a Complicated Variable Data as output\n  variableData.setVar(\n    ASTFactory.createVariableDeclaration({\n      meta: {\n        title: `Your Output Variable Title`,\n      },\n      key: `your_variable_global_unique_key_${node.id}`,\n      type: ASTFactory.createArray({\n        items: ASTFactory.createObject({\n          properties: [\n            ASTFactory.createProperty({\n              key: 'stringType',\n              type: ASTFactory.createString(),\n            }),\n            ASTFactory.createProperty({\n              key: 'booleanType',\n              type: ASTFactory.createBoolean(),\n            }),\n            ASTFactory.createProperty({\n              key: 'numberType',\n              type: ASTFactory.createNumber(),\n            }),\n            ASTFactory.createProperty({\n              key: 'integerType',\n              type: ASTFactory.createInteger(),\n            }),\n          ],\n        }),\n      }),\n    })\n  );\n\n  // ....\n})\n\n// ....\n\n"})}),"\n",(0,n.jsxs)(a.p,{children:["更多用法，详见：",(0,n.jsx)(a.a,{href:"https://flowgram-ai.github.io/flowgram.ai/auto-docs/editor/classes/FlowNodeVariableData.html",rel:"noopener noreferrer",target:"_blank",children:"Class: FlowNodeVariableData"})]}),"\n",(0,n.jsxs)(a.h3,{id:"通过表单副作用设置输出变量",children:[(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#通过表单副作用设置输出变量",children:"#"}),"通过表单副作用设置输出变量"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-tsx",meta:'pure title="node-registries.ts"',children:"import {\n  FlowNodeRegistry,\n  createEffectFromVariableProvider,\n  ASTFactory,\n  type ASTNodeJSON\n} from '@flowgram.ai/fixed-layout-editor';\n\nexport function createTypeFromValue(value: string): ASTNodeJSON | undefined {\n  switch (value) {\n    case 'string':\n      return ASTFactory.createString();\n    case 'number':\n      return ASTFactory.createNumber();\n    case 'boolean':\n      return ASTFactory.createBoolean();\n    case 'integer':\n      return ASTFactory.createInteger();\n\n    default:\n      return;\n  }\n}\n\nexport const nodeRegistries: FlowNodeRegistry[] = [\n  {\n    type: 'start',\n    formMeta: {\n      effect: {\n        'path.to.value': createEffectFromVariableProvider({\n          // parse form value to variable\n          parse(v: string) {\n            return {\n              meta: {\n                title: `Your Output Variable Title`,\n              },\n              key: `your_variable_global_unique_key_${node.id}`,\n              type: createTypeFromValue(v)\n            }\n          }\n        }),\n      },\n      render: () => (\n       // ...\n      )\n    },\n  }\n]\n\n"})}),"\n",(0,n.jsxs)(a.h2,{id:"节点消费变量",children:[(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#节点消费变量",children:"#"}),"节点消费变量"]}),"\n",(0,n.jsxs)(a.h3,{id:"获取变量列表",children:[(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#获取变量列表",children:"#"}),"获取变量列表"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-tsx",meta:'pure title="use-variable-tree.tsx"',children:"import {\n  type BaseVariableField,\n  useScopeAvailable,\n} from '@flowgram.ai/fixed-layout-editor';\n\n// .... Inside react hooks or component\n\nconst available = useScopeAvailable()\n\nconst renderVariable = (variable: BaseVariableField) => {\n  // ....\n}\n\nreturn available.variables.map(renderVariable)\n\n// ....\n\n\n"})}),"\n",(0,n.jsxs)(a.h3,{id:"获取-object-类型变量的下钻",children:[(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#获取-object-类型变量的下钻",children:"#"}),"获取 Object 类型变量的下钻"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-tsx",meta:'pure title="use-variable-tree.tsx"',children:"import {\n  type BaseVariableField,\n  isMatchAST,\n  ObjectType,\n} from '@flowgram.ai/fixed-layout-editor';\n\n// ....\n\nconst renderVariable = (variable: BaseVariableField) => ({\n  title: variable.meta?.title,\n  key: variable.key,\n  // Only Object Type can drilldown\n  children: isMatchAST(type, ObjectType) ? type.properties.map(renderVariable) : [],\n});\n\n// ....\n\n"})}),"\n",(0,n.jsxs)(a.h3,{id:"获取-array-类型变量的下钻",children:[(0,n.jsx)(a.a,{className:"header-anchor","aria-hidden":"true",href:"#获取-array-类型变量的下钻",children:"#"}),"获取 Array 类型变量的下钻"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-tsx",meta:'pure title="use-variable-tree.tsx"',children:"import {\n  type BaseVariableField,\n  type BaseType,\n  isMatchAST,\n  ObjectType,\n  ArrayType,\n} from '@flowgram.ai/fixed-layout-editor';\n\n// ....\n\nconst getTypeChildren = (type?: BaseType): BaseVariableField[] => {\n  if (!type) return [];\n\n  // get properties of Object\n  if (isMatchAST(type, ObjectType)) return type.properties;\n\n  // get items type of Array\n  if (isMatchAST(type, ArrayType)) return getTypeChildren(type.items);\n};\n\nconst renderVariable = (variable: BaseVariableField) => ({\n  title: variable.meta?.title,\n  key: variable.key,\n  // Only Object Type can drilldown\n  children: getTypeChildren(variable.type).map(renderVariable),\n});\n\n// ....\n\n"})})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:a}=Object.assign({},(0,t.ah)(),e.components);return a?(0,n.jsx)(a,Object.assign({},e,{children:(0,n.jsx)(i,e)})):i(e)}let o=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["zh%2Fguide%2Fadvanced%2Fvariable.mdx"]={toc:[{id:"开启变量引擎",text:"开启变量引擎",depth:2},{id:"节点输出变量",text:"节点输出变量",depth:2},{id:"通过-flownodevariabledata-设置输出变量",text:"通过 FlowNodeVariableData 设置输出变量",depth:3},{id:"通过表单副作用设置输出变量",text:"通过表单副作用设置输出变量",depth:3},{id:"节点消费变量",text:"节点消费变量",depth:2},{id:"获取变量列表",text:"获取变量列表",depth:3},{id:"获取-object-类型变量的下钻",text:"获取 Object 类型变量的下钻",depth:3},{id:"获取-array-类型变量的下钻",text:"获取 Array 类型变量的下钻",depth:3}],title:"变量的使用",frontmatter:{}}}}]);