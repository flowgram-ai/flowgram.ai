"use strict";(self.webpackChunk_flowgram_ai_docs=self.webpackChunk_flowgram_ai_docs||[]).push([["486994"],{638822:function(e,n,a){a.r(n),a.d(n,{default:function(){return i}});var r=a(110239),s=a(444827);function t(e){let n=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code",h2:"h2"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"workflowlinesmanager-free",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#workflowlinesmanager-free",children:"#"}),"WorkflowLinesManager (free)"]}),"\n",(0,r.jsx)(n.p,{children:"自由布局线条管理, 目前挂在自由布局 document 下边"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://flowgram-ai.github.io/flowgram.ai/auto-docs/free-layout-core/classes/WorkflowLinesManager.html",rel:"noopener noreferrer",target:"_blank",children:"> API Detail"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{meta:"",children:"import { useClientContext } from '@flowgram.ai/free-layout-editor'\n\nconst ctx = useClientContext();\nconsole.log(ctx.document.linesManager)\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"getalllines",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#getalllines",children:"#"}),"getAllLines"]}),"\n",(0,r.jsx)(n.p,{children:"获取所有线条的实体"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:"pure",children:"const allLines = ctx.document.linesManager.getAllLines()\n\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"createline",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#createline",children:"#"}),"createLine"]}),"\n",(0,r.jsx)(n.p,{children:"创建线条"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:"pure",children:"// from和 to 为对应要连线的节点id， fromPort, toPort 为 端口 id, 如果节点为单个端口可以不指定\nconst line = ctx.document.linesManager.createLine({ from, to, fromPort, toPort })\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"tojson",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tojson",children:"#"}),"toJSON"]}),"\n",(0,r.jsx)(n.p,{children:"导出线条数据"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:"pure",children:"const json = ctx.document.linesManager.toJSON()\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"onavailablelineschange",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#onavailablelineschange",children:"#"}),"onAvailableLinesChange"]}),"\n",(0,r.jsx)(n.p,{children:"监听所有线条的连线变化"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:"pure",children:"import { useEffect } from 'react'\nimport { useClientContext, useRefresh } from '@flowgram.ai/free-layout-editor'\n\n\nfunction SomeReact() {\n  const refresh = useRefresh()\n  const linesManager = useClientContext().document.linesManager\n  useEffect(() => {\n      const dispose = linesManager.onAvailableLinesChange(() => refresh())\n      return () => dispose.dispose()\n  }, [])\n  console.log(ctx.document.linesManager.getAllLines())\n}\n"})})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(t,e)})):t(e)}let i=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["zh%2Fapi%2Fcore%2Fworkflow-lines-manager.mdx"]={toc:[{id:"getalllines",text:"getAllLines",depth:2},{id:"createline",text:"createLine",depth:2},{id:"tojson",text:"toJSON",depth:2},{id:"onavailablelineschange",text:"onAvailableLinesChange",depth:2}],title:"WorkflowLinesManager (free)",frontmatter:{}}}}]);