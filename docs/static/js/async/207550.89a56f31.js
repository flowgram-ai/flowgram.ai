"use strict";(self.webpackChunk_flowgram_ai_docs=self.webpackChunk_flowgram_ai_docs||[]).push([["207550"],{402917:function(e,n,r){r.r(n),r.d(n,{default:function(){return s}});var o=r(110239),d=r(444827);function t(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",ul:"ul",li:"li",pre:"pre",code:"code"},(0,d.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.h1,{id:"usenoderender",children:[(0,o.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#usenoderender",children:"#"}),"useNodeRender"]}),"\n",(0,o.jsxs)(n.p,{children:["Provides methods related to node rendering, and the form returned is equivalent to ",(0,o.jsx)(n.a,{href:"/api/utils/get-node-form.html",children:"getNodeForm"})]}),"\n",(0,o.jsxs)(n.h2,{id:"fixed-layout",children:[(0,o.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#fixed-layout",children:"#"}),"Fixed Layout"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Return: ",(0,o.jsx)(n.a,{href:"https://flowgram-ai.github.io/flowgram.ai/auto-docs/fixed-layout-editor/interfaces/NodeRenderReturnType.html",rel:"noopener noreferrer",target:"_blank",children:"NodeRenderReturnType"})]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",meta:"pure",children:"\nimport { FlowNodeEntity, useNodeRender } from '@flowgram.ai/fixed-layout-editor';\n\nexport const BaseNode = ({ node }: { node: FlowNodeEntity }) => {\n  /**\n   * Provides methods related to node rendering\n   */\n  const nodeRender = useNodeRender();\n  /**\n   * Only available when the node engine is enabled\n   */\n  const form = nodeRender.form;\n\n  return (\n    <div\n      className=\"demo-fixed-node\"\n      /*\n       * Adding onMouseEnter to the fixed layout node is mainly to monitor the hover highlight of the branch line\n       **/\n      onMouseEnter={nodeRender.onMouseEnter}\n      onMouseLeave={nodeRender.onMouseLeave}\n      onMouseDown={e => {\n        // trigger drag node\n        nodeRender.startDrag(e);\n        e.stopPropagation();\n      }}\n      style={{\n        /**\n         * Used to precisely control the style of the branch node\n         * isBlockIcon: The header node of the entire condition branch\n         * isBlockOrderIcon: The first node of the branch\n         */\n        ...(nodeRender.isBlockOrderIcon || nodeRender.isBlockIcon ? { width: 260 } : {}),\n      }}\n    >\n      {form?.render()}\n    </div>\n  );\n};\n\n"})}),"\n",(0,o.jsxs)(n.h2,{id:"free-layout",children:[(0,o.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#free-layout",children:"#"}),"Free Layout"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Return: ",(0,o.jsx)(n.a,{href:"https://flowgram-ai.github.io/flowgram.ai/auto-docs/free-layout-core/interfaces/NodeRenderReturnType.html",rel:"noopener noreferrer",target:"_blank",children:"NodeRenderReturnType"})]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",meta:"pure",children:"import { WorkflowNodeRenderer, useNodeRender } from '@flowgram.ai/free-layout-editor';\nexport const BaseNode = () => {\n  const { form, node } = useNodeRender()\n  return (\n    <WorkflowNodeRenderer className=\"demo-free-node\" node={node}>\n      {form?.render()}\n    </WorkflowNodeRenderer>\n  )\n}\n\n"})})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(t,e)})):t(e)}let s=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["en%2Fapi%2Fhooks%2Fuse-node-render.mdx"]={toc:[{id:"fixed-layout",text:"Fixed Layout",depth:2},{id:"free-layout",text:"Free Layout",depth:2}],title:"useNodeRender",frontmatter:{}}}}]);