"use strict";(self.webpackChunk_flowgram_ai_docs=self.webpackChunk_flowgram_ai_docs||[]).push([["337662"],{750494:function(e,n,d){d.r(n),d.d(n,{default:function(){return o}});var t=d(110239),i=d(444827);function s(e){let n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",ul:"ul",li:"li",h3:"h3",pre:"pre",div:"div"},(0,i.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"flownodeentityworkflownodeentity",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#flownodeentityworkflownodeentity",children:"#"}),"FlowNodeEntity/WorkflowNodeEntity"]}),"\n",(0,t.jsxs)(n.p,{children:["Node entity, ",(0,t.jsx)(n.code,{children:"WorkflowNodeEntity"})," is the alias for the node used for free layout nodes, the node entity uses the ",(0,t.jsx)(n.a,{href:"/flowgram.ai/guide/concepts/ECS.html",children:"ECS"})," architecture, is ",(0,t.jsx)(n.code,{children:"Entity"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://flowgram-ai.github.io/flowgram.ai/auto-docs/document/classes/FlowNodeEntity-1.html",rel:"noopener noreferrer",target:"_blank",children:"> API Detail"})}),"\n",(0,t.jsxs)(n.h2,{id:"properties",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#properties",children:"#"}),"Properties"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["id: ",(0,t.jsx)(n.code,{children:"string"})," Node id"]}),"\n",(0,t.jsxs)(n.li,{children:["flowNodeType: ",(0,t.jsx)(n.code,{children:"string"})," | ",(0,t.jsx)(n.code,{children:"number"})," Node type"]}),"\n",(0,t.jsxs)(n.li,{children:["version ",(0,t.jsx)(n.code,{children:"number"})," Node version, can be used to determine if the node state has been updated"]}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"accessors",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#accessors",children:"#"}),"Accessors"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["document: ",(0,t.jsx)(n.code,{children:"FlowDocument | WorkflowDocument"})," Document link"]}),"\n",(0,t.jsxs)(n.li,{children:["bounds: ",(0,t.jsx)(n.code,{children:"Rectangle"})," Get the node's x, y, width, height, equivalent to ",(0,t.jsx)(n.code,{children:"transform.bounds"})]}),"\n",(0,t.jsxs)(n.li,{children:["blocks: ",(0,t.jsx)(n.code,{children:"FlowNodeEntity[]"})," Get child nodes, including collapsed child nodes, equivalent to ",(0,t.jsx)(n.code,{children:"collapsedChildren"})]}),"\n",(0,t.jsxs)(n.li,{children:["collapsedChildren: ",(0,t.jsx)(n.code,{children:"FlowNodeEntity[]"})," Get child nodes, including collapsed child nodes"]}),"\n",(0,t.jsxs)(n.li,{children:["allCollapsedChildren: ",(0,t.jsx)(n.code,{children:"FlowNodeEntity[]"})," Get all child nodes, including all collapsed child nodes"]}),"\n",(0,t.jsxs)(n.li,{children:["children: ",(0,t.jsx)(n.code,{children:"FlowNodeEntity[]"})," Get child nodes, not including collapsed child nodes"]}),"\n",(0,t.jsxs)(n.li,{children:["pre: ",(0,t.jsx)(n.code,{children:"FlowNodeEntity | undefined"})," Get the previous node"]}),"\n",(0,t.jsxs)(n.li,{children:["next: ",(0,t.jsx)(n.code,{children:"FlowNodeEntity | undefined"})," Get the next node"]}),"\n",(0,t.jsxs)(n.li,{children:["parent: ",(0,t.jsx)(n.code,{children:"FlowNodeEntity | undefined"})," Get the parent node"]}),"\n",(0,t.jsxs)(n.li,{children:["originParent: ",(0,t.jsx)(n.code,{children:"FlowNodeEntity | undefined"})," Get the original parent node, this is used to find the entire virtual branch for the first node of the fixed layout branch (orderIcon)"]}),"\n",(0,t.jsxs)(n.li,{children:["allChildren: ",(0,t.jsx)(n.code,{children:"FlowNodeEntity[]"})," Get all child nodes, not including collapsed child nodes"]}),"\n",(0,t.jsxs)(n.li,{children:["transform: ",(0,t.jsx)(n.a,{href:"https://flowgram-ai.github.io/flowgram.ai/auto-docs/document/classes/FlowNodeTransformData.html",rel:"noopener noreferrer",target:"_blank",children:"FlowNodeTransformData"})," Get the node's transform matrix data"]}),"\n",(0,t.jsxs)(n.li,{children:["renderData: ",(0,t.jsx)(n.a,{href:"https://flowgram-ai.github.io/flowgram.ai/auto-docs/document/classes/FlowNodeRenderData.html",rel:"noopener noreferrer",target:"_blank",children:"FlowNodeRenderData"})," Get the node's render data, including render status"]}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"methods",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#methods",children:"#"}),"Methods"]}),"\n",(0,t.jsxs)(n.h3,{id:"getextinfo",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#getextinfo",children:"#"}),"getExtInfo"]}),"\n",(0,t.jsxs)(n.p,{children:["Get the node's extended information, can be updated through ",(0,t.jsx)(n.code,{children:"updateExtInfo"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{meta:"",children:"node.getExtInfo<{ test: string }>()\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"updateextinfo",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#updateextinfo",children:"#"}),"updateExtInfo"]}),"\n",(0,t.jsxs)(n.p,{children:["Update extended data, update will not be recorded in ",(0,t.jsx)(n.code,{children:"redo/undo"}),", if you need to record, please implement the ",(0,t.jsx)(n.a,{href:"/flowgram.ai/guide/advanced/history.html",children:"history"})," service"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{meta:"",children:"node.updateExtInfo<{ test: string }>({\n  test: 'test'\n})\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"getnoderegistry",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#getnoderegistry",children:"#"}),"getNodeRegistry"]}),"\n",(0,t.jsxs)(n.p,{children:["Get the node registry, equivalent to ",(0,t.jsx)(n.code,{children:"ctx.document.getNodeRegistry(node.flowNodeType)"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:"pure",children:"const nodeRegistry = node.getNodeRegistry<FlowNodeRegistry>()\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"getdata",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#getdata",children:"#"}),"getData"]}),"\n",(0,t.jsxs)(n.p,{children:["Equivalent to getting the Component of Entity in the ",(0,t.jsx)(n.a,{href:"/flowgram.ai/guide/concepts/ECS.html",children:"ECS"})," architecture, currently built-in two core Components"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:"pure",children:"node.getData(FlowNodeTransformData) // transform matrix data, including the node's x, y, width, height, etc.\nnode.getData(FlowNodeRenderData) // node render data, including render status\n\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"adddata",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#adddata",children:"#"}),"addData"]}),"\n",(0,t.jsxs)(n.p,{children:["Equivalent to adding the Component of Entity in the ",(0,t.jsx)(n.a,{href:"/flowgram.ai/guide/concepts/ECS.html",children:"ECS"})," architecture"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:"pure",children:"\n// Custom EntityData\nclass CustomEntityData extends EntityData<{ key0: string }> {\n  static type = 'CustomEntityData';\n  getDefaultData() {\n    return {\n      key0: 'test'\n    }\n  }\n}\n\n// Add Entity Component\nnode.addData(CustomEntityData)\n\n\n// Update Entity Component data\nnode.getData(CustomEntityData).update({ key0: 'new value' })\n\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"getservice",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#getservice",children:"#"}),"getService"]}),"\n",(0,t.jsxs)(n.p,{children:["Node access ",(0,t.jsx)(n.a,{href:"/flowgram.ai/guide/concepts/IOC.html",children:"IOC"})," service"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:"pure",children:"node.getService(SelectionService)\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"dispose",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#dispose",children:"#"}),"dispose"]}),"\n",(0,t.jsx)(n.p,{children:"Node destruction from canvas"}),"\n",(0,t.jsxs)(n.h3,{id:"ondispose",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#ondispose",children:"#"}),"onDispose"]}),"\n",(0,t.jsx)(n.p,{children:"Node destruction event"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:"pure",children:"useEffect(() => {\n  const toDispose = node.onDispose(() => {\n    console.log('Dispose node')\n  })\n  return () => toDispose.dispose()\n}, [node])\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"tojson",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tojson",children:"#"}),"toJSON"]}),"\n",(0,t.jsx)(n.p,{children:"Export node data"}),"\n",(0,t.jsxs)(n.div,{className:"rspress-directive note",children:[(0,t.jsx)(n.div,{className:"rspress-directive-title",children:"Node data basic structure:"}),(0,t.jsx)(n.div,{className:"rspress-directive-content",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["id: ",(0,t.jsx)(n.code,{children:"string"})," Node unique identifier, must be unique"]}),"\n",(0,t.jsxs)(n.li,{children:["meta: ",(0,t.jsx)(n.code,{children:"object"})," Node ui configuration information, such as ",(0,t.jsx)(n.code,{children:"position"})," information for free layout"]}),"\n",(0,t.jsxs)(n.li,{children:["type: ",(0,t.jsx)(n.code,{children:"string | number"})," Node type, will correspond to ",(0,t.jsx)(n.code,{children:"type"})," in ",(0,t.jsx)(n.code,{children:"nodeRegistries"})]}),"\n",(0,t.jsxs)(n.li,{children:["data: ",(0,t.jsx)(n.code,{children:"object"})," Node form data, business can customize"]}),"\n",(0,t.jsxs)(n.li,{children:["blocks: ",(0,t.jsx)(n.code,{children:"array"})," Node branches, using ",(0,t.jsx)(n.code,{children:"block"})," is closer to ",(0,t.jsx)(n.code,{children:"Gramming"})]}),"\n"]})})]})]})}function r(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(s,e)})):s(e)}let o=r;r.__RSPRESS_PAGE_META={},r.__RSPRESS_PAGE_META["en%2Fapi%2Fcore%2Fflow-node-entity.mdx"]={toc:[{id:"properties",text:"Properties",depth:2},{id:"accessors",text:"Accessors",depth:2},{id:"methods",text:"Methods",depth:2},{id:"getextinfo",text:"getExtInfo",depth:3},{id:"updateextinfo",text:"updateExtInfo",depth:3},{id:"getnoderegistry",text:"getNodeRegistry",depth:3},{id:"getdata",text:"getData",depth:3},{id:"adddata",text:"addData",depth:3},{id:"getservice",text:"getService",depth:3},{id:"dispose",text:"dispose",depth:3},{id:"ondispose",text:"onDispose",depth:3},{id:"tojson",text:"toJSON",depth:3}],title:"FlowNodeEntity/WorkflowNodeEntity",frontmatter:{}}}}]);