"use strict";(self.webpackChunk_flowgram_ai_docs=self.webpackChunk_flowgram_ai_docs||[]).push([["596849"],{265964:function(e,t,n){n.r(t),n.d(t,{default:function(){return i}});var r=n(110239),s=n(444827);function d(e){let t=Object.assign({h1:"h1",a:"a",p:"p",strong:"strong",code:"code",h4:"h4",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.h1,{id:"function-findmatchpaths",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#function-findmatchpaths",children:"#"}),"Function: findMatchPaths"]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"/zh/auto-docs/form/modules/Glob.html",children:"Glob"}),".findMatchPaths"]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"findMatchPaths"}),"(",(0,r.jsx)(t.code,{children:"obj"}),", ",(0,r.jsx)(t.code,{children:"pattern"}),", ",(0,r.jsx)(t.code,{children:"withEmptyValue?"}),"): ",(0,r.jsx)(t.code,{children:"string"}),"[]"]}),"\n",(0,r.jsx)(t.p,{children:"Find all paths matched pattern in object. If withEmptyValue is true, it will include\npaths  whoes value is undefined."}),"\n",(0,r.jsxs)(t.h4,{id:"parameters",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters",children:"#"}),"Parameters"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{align:"left",children:"Name"}),(0,r.jsx)(t.th,{align:"left",children:"Type"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.code,{children:"obj"})}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.code,{children:"any"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.code,{children:"pattern"})}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.code,{children:"string"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.code,{children:"withEmptyValue?"})}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.code,{children:"boolean"})})]})]})]}),"\n",(0,r.jsxs)(t.h4,{id:"returns",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#returns",children:"#"}),"Returns"]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"string"}),"[]"]})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,s.ah)(),e.components);return t?(0,r.jsx)(t,Object.assign({},e,{children:(0,r.jsx)(d,e)})):d(e)}let i=h;h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["zh%2Fauto-docs%2Fform%2Ffunctions%2FGlob.findMatchPaths.md"]={toc:[{id:"parameters",text:"Parameters",depth:4},{id:"returns",text:"Returns",depth:4}],title:"Function: findMatchPaths",frontmatter:{}}}}]);